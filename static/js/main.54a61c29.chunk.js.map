{"version":3,"sources":["assets/noPosterSmall.png","assets/NoVideo.png","assets/Loading.gif","assets/IMDb.svg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/Tabs/VideoTab.js","Routes/Detail/Tabs/ProductionTab.js","Routes/Detail/Tabs/CreatedByTab.js","Routes/Detail/Tabs/MoreTab.js","Routes/Detail/Tabs.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","ImageContainerOnly","Year","PerformanceEntry","propTypes","id","PropTypes","number","isRequired","imageUrl","string","rating","year","isMovie","bool","Poster","isCollection","onlyImage","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","collectionApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","NoVideo","VideoContainer","Viewer","num","WrapWrap","Wrap","Video","iframe","VideoButtons","VideoButton","VideoTab","videos","result","video","index","src","href","LogoWrapper","CompanyLogo","Country","ProductionsTab","production_companies","production_countries","company","logo_path","name","country","ProfileWrapper","Profile","MadeByTab","created_by","people","profile_path","Content","Homepage","attrs","SeasonsContainer","Season","MoreTab","homepage","status","budget","toLocaleString","spoken_languages","seasons","season","air_date","MenuContainer","MenuTab","NavLink","Menu","MenuContents","MenuContent","Tabs","search","ProductionTab","CreatedByTab","BackDrop","bgImage","Cover","Data","h3","ItemContainer","Divider","Overview","IMDb","Stars","Collection","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","imdb_id","fill","Math","round","join","overview","belongs_to_collection","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","CollectionPresenter","parts","CollectionContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54a61c29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/NoVideo.13526e1e.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading.6bc11c2e.gif\";","module.exports = __webpack_public_path__ + \"static/media/IMDb.63115ec2.svg\";","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: rgba(20, 20, 20, 0.8);\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid ${(props) => (props.current ? '#3498db' : 'transparent')};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === '/'}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === '/tv'}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === '/search'}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: Proptypes.string.isRequired,\r\n    children: Proptypes.oneOfType([Proptypes.arrayOf(Proptypes.node), Proptypes.node]),\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏱\r\n        </span>\r\n    </Container>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${(props) => props.bgUrl});\r\n    width: 125px;\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover {\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ImageContainerOnly = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false, isCollection = false, onlyImage = false }) =>\r\n    onlyImage ? (\r\n        <Container>\r\n            <ImageContainerOnly>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/noPosterSmall.png')} />\r\n            </ImageContainerOnly>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\r\n            <Year>{year && year.substring(0, 4)}</Year>\r\n        </Container>\r\n    ) : (\r\n        <Link to={isCollection ? `/collection/${id}` : isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n            <Container>\r\n                <ImageContainer>\r\n                    <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/noPosterSmall.png')} />\r\n                    {!isCollection && (\r\n                        <Rating>\r\n                            <span role=\"img\" aria-label=\"rating\">\r\n                                ⭐\r\n                            </span>{' '}\r\n                            {rating}/10\r\n                        </Rating>\r\n                    )}\r\n                </ImageContainer>\r\n                <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\r\n                <Year>{year && year.substring(0, 4)}</Year>\r\n            </Container>\r\n        </Link>\r\n    );\r\n\r\nPerformanceEntry.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies | Nomflix</title>\r\n                </Helmet>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error}></Message>}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n    config.params = config.params || {};\r\n    config.params['api_key'] = 'e888a49335fbd825c9bbcf82da7981f8';\r\n    config.params['language'] = 'en-US';\r\n    return config;\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get('movie/now_playing'),\r\n    upcoming: () => api.get('movie/upcoming'),\r\n    popular: () => api.get('movie/popular'),\r\n    movieDetail: (id) =>\r\n        api.get(`movie/${id}`, {\r\n            params: {\r\n                append_to_response: 'videos',\r\n            },\r\n        }),\r\n    search: (term) =>\r\n        api.get('search/movie', {\r\n            params: {\r\n                query: encodeURIComponent(term),\r\n            },\r\n        }),\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get('tv/top_rated'),\r\n    popular: () => api.get('tv/popular'),\r\n    airingToday: () => api.get('tv/airing_today'),\r\n    showDetail: (id) =>\r\n        api.get(`tv/${id}`, {\r\n            params: {\r\n                append_to_response: 'videos',\r\n            },\r\n        }),\r\n    search: (term) =>\r\n        api.get('search/tv', {\r\n            params: {\r\n                query: encodeURIComponent(term),\r\n            },\r\n        }),\r\n};\r\n\r\nexport const collectionApi = {\r\n    showDetail: (id) => api.get(`collection/${id}`),\r\n};\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport HomePresenter from './HomePresenter.js';\r\nimport { moviesApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying },\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming },\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: { results: popular },\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular,\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\",\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        //console.log(this.state);\r\n        return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                {airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error}></Message>}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;\r\n","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: topRated },\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular },\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: { results: airingToday },\r\n            } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\",\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        //console.log(this.state);\r\n        return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from '../../Components/Message';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm }) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n        </Form>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Results\">\r\n                        {movieResults.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Results\">\r\n                        {tvResults.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n            </>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\r\n            <Message color=\"#95a5a6\" text=\"Nothing found\" />\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi } from 'api';\r\nimport { tvApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: '',\r\n        error: null,\r\n        loading: false,\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== '') {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        this.setState({\r\n            searchTerm: value,\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const {\r\n                data: { results: movieResults },\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults },\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults,\r\n            });\r\n        } catch {\r\n            this.setState({ error: \"Can't find results.\" });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        return (\r\n            <SearchPresenter\r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                searchTerm={searchTerm}\r\n                error={error}\r\n                loading={loading}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.div`\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst NoVideo = styled.div`\r\n    width: 100%;\r\n    height: 0;\r\n    background-image: url(${require('../../../assets/NoVideo.png')});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    padding: 10px 10px 56.25% 10px;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n    overflow-x: hidden;\r\n    background-image: url(${require('../../../assets/Loading.gif')});\r\n    background-size: cover;\r\n    background-position: center center;\r\n`;\r\n\r\nconst Viewer = styled.div`\r\n    width: calc(100% * ${(props) => props.num});\r\n    height: auto;\r\n    display: flex;\r\n`;\r\n\r\nconst WrapWrap = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n    position: relative;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n    width: 100%;\r\n    height: 0;\r\n    padding-bottom: 56.25%;\r\n    position: relative;\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst VideoButtons = styled.div`\r\n    height: auto;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst VideoButton = styled.a`\r\n    display: inline-block;\r\n    background-color: rgba(20, 20, 20, 0.8);\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 5px;\r\n    border-radius: 50%;\r\n    border: 1px solid rgb(100, 100, 100);\r\n    :hover {\r\n        background-color: rgb(100, 100, 100);\r\n    }\r\n`;\r\n\r\nconst VideoTab = ({\r\n    result: {\r\n        videos: { results: videos },\r\n    },\r\n}) => (\r\n    <Item>\r\n        {videos.length === 0 ? (\r\n            <NoVideo>No videos find</NoVideo>\r\n        ) : (\r\n            <>\r\n                <VideoContainer>\r\n                    <Viewer num={`${videos.length}`}>\r\n                        {videos.map((video, index) => (\r\n                            <WrapWrap id={`${index}`}>\r\n                                <Wrap>\r\n                                    <Video src={`https://www.youtube.com/embed/${video.key}`} />\r\n                                </Wrap>\r\n                            </WrapWrap>\r\n                        ))}\r\n                    </Viewer>\r\n                </VideoContainer>\r\n                <VideoButtons>\r\n                    {videos.map((video, index) => (\r\n                        <VideoButton href={`#${index}`} />\r\n                    ))}\r\n                </VideoButtons>\r\n            </>\r\n        )}\r\n    </Item>\r\n);\r\nexport default VideoTab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.div`\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 10px;\r\n    background-color: rgba(25, 25, 25, 0.6);\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 5px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 140px);\r\n    grid-gap: 15px;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    flex: 1;\r\n    height: auto;\r\n    background-color: rgba(24, 24, 28, 0.85);\r\n    border-radius: 4px;\r\n    padding: 5px;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    text-align: center;\r\n`;\r\n\r\nconst CompanyLogo = styled.div`\r\n    background-image: url(${(props) => props.bgUrl});\r\n    width: 100%;\r\n    height: 100px;\r\n    margin-bottom: 10px;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n`;\r\n\r\nconst Country = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n    margin-top: 5px;\r\n    background-color: rgba(24, 24, 28, 0.85);\r\n    padding: 10px;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst ProductionsTab = ({ result: { production_companies, production_countries } }) => (\r\n    <>\r\n        <Item>\r\n            Production Companies\r\n            <Grid>\r\n                {production_companies && production_companies.length > 0\r\n                    ? production_companies.map((company, index) => (\r\n                          <LogoWrapper>\r\n                              <CompanyLogo\r\n                                  bgUrl={\r\n                                      company.logo_path\r\n                                          ? `https://image.tmdb.org/t/p/w300${company.logo_path}`\r\n                                          : require('../../../assets/noPosterSmall.png')\r\n                                  }\r\n                              />\r\n                              <h1>{company.name}</h1>\r\n                          </LogoWrapper>\r\n                      ))\r\n                    : 'None'}\r\n            </Grid>\r\n        </Item>\r\n        <Item>\r\n            Production Countries\r\n            {production_countries && production_countries.length > 0 ? (\r\n                production_countries.map((country, index) => <Country>{country.name}</Country>)\r\n            ) : (\r\n                <Country>None</Country>\r\n            )}\r\n        </Item>\r\n    </>\r\n);\r\n\r\nexport default ProductionsTab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.div`\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 10px;\r\n    background-color: rgba(25, 25, 25, 0.6);\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 5px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 140px);\r\n    grid-gap: 15px;\r\n`;\r\n\r\nconst ProfileWrapper = styled.div`\r\n    flex: 1;\r\n    height: auto;\r\n    padding: 5px;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    text-align: center;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n    background-color: rgba(24, 24, 28, 0.85);\r\n    background-image: url(${(props) => props.bgUrl});\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    height: 180px;\r\n    margin-bottom: 10px;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n`;\r\n\r\nconst MadeByTab = ({ result: { created_by } }) => (\r\n    <Item>\r\n        Peoples\r\n        <Grid>\r\n            {created_by && created_by.length > 0\r\n                ? created_by.map((people, index) => (\r\n                      <ProfileWrapper>\r\n                          <Profile\r\n                              bgUrl={\r\n                                  people.profile_path\r\n                                      ? `https://image.tmdb.org/t/p/w300${people.profile_path}`\r\n                                      : require('../../../assets/noPosterSmall.png')\r\n                              }\r\n                          />\r\n                          <h1>{people.name}</h1>\r\n                      </ProfileWrapper>\r\n                  ))\r\n                : 'None'}\r\n        </Grid>\r\n    </Item>\r\n);\r\n\r\nexport default MadeByTab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Poster from '../../../Components/Poster';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Content = styled.div`\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 10px;\r\n    background-color: rgba(25, 25, 25, 0.6);\r\n`;\r\n\r\nconst Item = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n    margin-top: 5px;\r\n    background-color: rgba(24, 24, 28, 0.85);\r\n    padding: 10px;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst Homepage = styled.a.attrs((props) => ({\r\n    href: props.children,\r\n    target: '_blank',\r\n}))`\r\n    text-decoration: underline;\r\n    display: inline-block;\r\n`;\r\n\r\nconst SeasonsContainer = styled.div`\r\n    width: 100%;\r\n    height: 245px;\r\n    padding-top: 10px;\r\n    /* background-color: red; */\r\n    display: flex;\r\n    overflow-x: auto;\r\n    overflow-y: visible;\r\n`;\r\n\r\nconst Season = styled.div`\r\n    height: auto;\r\n    width: 125px;\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst MoreTab = ({ result }) => (\r\n    <Container>\r\n        {result.homepage && (\r\n            <Content>\r\n                Homepage\r\n                <Item>\r\n                    <Homepage>{result.homepage}</Homepage>\r\n                </Item>\r\n            </Content>\r\n        )}\r\n        {result.status === 'Released' && (\r\n            <Container>\r\n                <Content>\r\n                    Release Date\r\n                    <Item>{result.release_date ? result.release_date : result.status}</Item>\r\n                </Content>\r\n                <Content>\r\n                    Budget\r\n                    <Item>{result.budget ? `${result.budget.toLocaleString()} $` : 'None'}</Item>\r\n                </Content>\r\n            </Container>\r\n        )}\r\n        {result.status === 'In Production' && (\r\n            <Content>\r\n                Status<Item>In Production</Item>\r\n            </Content>\r\n        )}\r\n        {result.spoken_languages && result.spoken_languages.length > 0 && (\r\n            <Content>\r\n                Spoken Languages\r\n                {result.spoken_languages.map(({ name }) => name !== '' && <Item>{name}</Item>)}\r\n            </Content>\r\n        )}\r\n        {result.seasons && (\r\n            <Content>\r\n                Seasons\r\n                <SeasonsContainer>\r\n                    {result.seasons.map((season) => (\r\n                        <Season>\r\n                            <Poster\r\n                                key={season.id}\r\n                                id={season.id}\r\n                                imageUrl={season.poster_path}\r\n                                title={season.name}\r\n                                year={season.air_date}\r\n                                onlyImage={true}\r\n                            />\r\n                        </Season>\r\n                    ))}\r\n                </SeasonsContainer>\r\n            </Content>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nexport default MoreTab;\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport VideoTab from './Tabs/VideoTab';\r\nimport ProductionTab from './Tabs/ProductionTab';\r\nimport CreatedByTab from './Tabs/CreatedByTab';\r\nimport MoreTab from './Tabs/MoreTab';\r\n\r\nconst MenuContainer = styled.div`\r\n    width: 50%;\r\n    height: auto;\r\n`;\r\n\r\nconst MenuTab = styled(NavLink)`\r\n    display: flex;\r\n    flex: 1;\r\n    height: 100%;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    border-bottom: 3px solid ${(props) => (props.current ? '#bdc3c7' : 'transparent')};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n    height: 45px;\r\n    width: 100%;\r\n    display: flex;\r\n    background-color: rgba(25, 25, 25, 0.6);\r\n`;\r\n\r\nconst MenuContents = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst MenuContent = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst Tabs = withRouter(({ location, result }) => (\r\n    <MenuContainer>\r\n        <Menu>\r\n            <MenuTab to={`${location.pathname}?tab=video`} current={location.search === '?tab=video' || location.search === ''}>\r\n                Video\r\n            </MenuTab>\r\n            <MenuTab to={`${location.pathname}?tab=production`} current={location.search === '?tab=production'}>\r\n                Production\r\n            </MenuTab>\r\n            {result.created_by && result.created_by.length > 0 && (\r\n                <MenuTab to={`${location.pathname}?tab=created_by`} current={location.search === '?tab=created_by'}>\r\n                    Created By\r\n                </MenuTab>\r\n            )}\r\n            <MenuTab to={`${location.pathname}?tab=more`} current={location.search === '?tab=more'}>\r\n                More\r\n            </MenuTab>\r\n        </Menu>\r\n        <MenuContents>\r\n            {(location.search === '?tab=video' || location.search === '') && (\r\n                <MenuContent>\r\n                    <VideoTab result={result} />\r\n                </MenuContent>\r\n            )}\r\n            {location.search === '?tab=production' && (\r\n                <MenuContent>\r\n                    <ProductionTab result={result} />\r\n                </MenuContent>\r\n            )}\r\n            {location.search === '?tab=created_by' && (\r\n                <MenuContent>\r\n                    <CreatedByTab result={result} />\r\n                </MenuContent>\r\n            )}\r\n            {location.search === '?tab=more' && (\r\n                <MenuContent>\r\n                    <MoreTab result={result} />\r\n                </MenuContent>\r\n            )}\r\n        </MenuContents>\r\n    </MenuContainer>\r\n));\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport Message from '../../Components/Message';\r\nimport Tabs from './Tabs';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 69%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin-top: 20px;\r\n    height: 16px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst IMDb = styled.a`\r\n    height: 16px;\r\n    width: 32px;\r\n    display: inline-block;\r\n    top: 50px;\r\n    position: absolute;\r\n    background-image: url(${require('../../assets/IMDb.svg')});\r\n`;\r\n\r\nconst Stars = styled.span`\r\n    color: #f1c40f;\r\n`;\r\n\r\nconst Collection = styled(Link)`\r\n    width: 125px;\r\n    height: 180px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        <>\r\n            {result && (\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n                    </Helmet>\r\n                    <BackDrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n                    <Content>\r\n                        <Cover\r\n                            bgImage={\r\n                                result.poster_path\r\n                                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                                    : require('../../assets/noPosterSmall.png')\r\n                            }\r\n                        />\r\n                        <Data>\r\n                            <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                            <ItemContainer>\r\n                                {result.release_date && (\r\n                                    <>\r\n                                        <Item>{result.release_date.substring(0, 4)}</Item>\r\n                                        <Divider>•</Divider>\r\n                                    </>\r\n                                )}\r\n                                {result.first_air_date && (\r\n                                    <>\r\n                                        <Item>{result.first_air_date.substring(0, 4)}</Item>\r\n                                        <Divider>•</Divider>\r\n                                    </>\r\n                                )}\r\n                                {result?.runtime > 0 ? (\r\n                                    <>\r\n                                        <Item>{`${result.runtime} min`}</Item>\r\n                                        <Divider>•</Divider>\r\n                                    </>\r\n                                ) : null}\r\n                                {result?.episode_run_time > 0 ? (\r\n                                    <>\r\n                                        <Item>{`${result.episode_run_time[0]} min`}</Item>\r\n                                        <Divider>•</Divider>\r\n                                    </>\r\n                                ) : null}\r\n                                <Item>\r\n                                    {result.genres && result.genres.length > 0\r\n                                        ? result.genres.map((genre, index) =>\r\n                                              index === result.genres.length - 1 ? genre.name : `${genre.name} / `\r\n                                          )\r\n                                        : 'No Genres'}\r\n                                </Item>\r\n                                {result.imdb_id && (\r\n                                    <>\r\n                                        <Divider>•</Divider>\r\n                                        <Item>\r\n                                            <IMDb href={`https://www.imdb.com/title/${result.imdb_id}/`} target=\"_blank\" />\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        </Item>\r\n                                    </>\r\n                                )}\r\n                                {result.vote_average !== 0 && (\r\n                                    <>\r\n                                        <Divider>•</Divider>\r\n                                        <Stars role=\"img\" aria-label=\"rating\">\r\n                                            {['☆', '☆', '☆', '☆', '☆'].fill('★', 0, Math.round(result.vote_average / 2)).join(' ')}\r\n                                        </Stars>\r\n                                    </>\r\n                                )}\r\n                            </ItemContainer>\r\n                            <Overview>{result.overview}</Overview>\r\n                            <Tabs result={result} />\r\n                        </Data>\r\n                        {result.belongs_to_collection && (\r\n                            <Collection to={`/collection/${result.belongs_to_collection.id}`}>\r\n                                <Poster\r\n                                    key={result.belongs_to_collection.id}\r\n                                    id={result.belongs_to_collection.id}\r\n                                    imageUrl={result.belongs_to_collection.poster_path}\r\n                                    title={result.belongs_to_collection.name}\r\n                                    isCollection={true}\r\n                                />\r\n                            </Collection>\r\n                        )}\r\n                    </Content>\r\n                </Container>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </>\r\n    );\r\nDetailPresenter.propTypes = {\r\n    Result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter.js';\r\nimport { moviesApi, tvApi } from 'api.js';\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: { pathname },\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes('/movie/'),\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id },\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n        let result;\r\n        try {\r\n            if (isMovie) {\r\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything.\" });\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        //console.log(result);\r\n        return <DetailPresenter result={result} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from '../../Components/Message';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst CollectionPresenter = ({ result, loading, error }) =>\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        <>\r\n            {result && (\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>{result.name} | Nomflix</title>\r\n                    </Helmet>\r\n                    <BackDrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n                    <Content>\r\n                        <Cover\r\n                            bgImage={\r\n                                result.poster_path\r\n                                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                                    : require('../../assets/noPosterSmall.png')\r\n                            }\r\n                        />\r\n                        <Data>\r\n                            <Title>{result.name}</Title>\r\n                            <Overview>{result.overview}</Overview>\r\n                            {result.parts && result.parts.length > 0 && (\r\n                                <Section title=\"Movies belonged to this collection\">\r\n                                    {result.parts.map((movie) => (\r\n                                        <Poster\r\n                                            key={movie.id}\r\n                                            id={movie.id}\r\n                                            imageUrl={movie.poster_path}\r\n                                            title={movie.title}\r\n                                            rating={movie.vote_average}\r\n                                            year={movie.release_date}\r\n                                            isMovie={true}\r\n                                        />\r\n                                    ))}\r\n                                </Section>\r\n                            )}\r\n                        </Data>\r\n                    </Content>\r\n                </Container>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </>\r\n    );\r\nCollectionPresenter.propTypes = {\r\n    Result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default CollectionPresenter;\r\n","import CollectionContainer from './CollectionContainer';\r\n\r\nexport default CollectionContainer;\r\n","import React from 'react';\r\nimport CollectionPresenter from './CollectionPresenter.js';\r\nimport { collectionApi } from 'api.js';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        result: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id },\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n        let result;\r\n        try {\r\n            ({ data: result } = await collectionApi.showDetail(parsedId));\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything.\" });\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        //console.log(result);\r\n        return <CollectionPresenter result={result} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Header from 'Components/Header';\r\nimport Home from 'Routes/Home';\r\nimport TV from 'Routes/TV';\r\nimport Search from 'Routes/Search';\r\nimport Detail from 'Routes/Detail';\r\nimport Collection from 'Routes/Collection';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" component={TV} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Route path=\"/collection/:id\" component={Collection} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Router />\n                <GlobalStyles />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}